#!/usr/bin/python3 -B

import component
import component_command
import config
import edge_command
import graph
import graph_command
import os
import schema_command
import shutil
import sys

print('grdb (C) Frank W. Miller')

rdir = os.path.expanduser(config.GRDB_DIR)
try:
	os.stat(rdir)
	print('Database directory:', rdir)
except:
	print('Create database directory:', rdir)
	os.mkdir(rdir)

# Determine initial current graph and component number
gno = (-1)
cno = (-1)
glist = graph.graphs_get_list()
gnolist = list(map(int, glist))
if gnolist:
	gno = min(gnolist)

if gno >= 0:
	clist = component.components_get_list(gno)
	cnolist = list(map(int, clist))
	if cnolist:
		cno = min(cnolist or (-1))

# Main command line loop
while True:
	# Determine appropriate prompt
	if gno < 0 or cno < 0:
		line = input(config.PROMPT)
	else:
		line = input(str(gno) + '.' + str(cno) + '> ')

	argv = line.split()

	if len(argv) == 0:
		continue

	if argv[0] == 'quit':
		sys.exit(0)

	if argv[0] == 'clear':
		rdir = os.path.expanduser(config.GRDB_DIR)
		shutil.rmtree(rdir, ignore_errors=True)
		os.mkdir(rdir)
		gno = (-1)
		cno = (-1)
		continue;

	if argv[0] == 'graph' or argv[0] == 'g':
		gno, cno = graph_command.graph_command(argv, gno, cno)
		continue

	if argv[0] == 'component' or argv[0] == 'c':
		gno, cno = component_command.component_command(argv, gno, cno)
		continue

	if argv[0] == 'schema' or argv[0] == 's':
		schema_command.schema_command(argv, gno, cno)
		continue

	if argv[0] == 'edge' or argv[0] == 'e':
		edge_command.edge_command(argv, gno, cno)
		continue
